name: Build documentation
on: [push, pull_request]
jobs:
  build_docs:
    name: Build documentation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: '1.3.1-0'
          environment-file: environment.yml
          init-shell: >-
            bash
          cache-environment: true
          post-cleanup: 'all'
      - name: Setup project
        shell: bash -el {0}
        run: |
          mkdir build
          cd build
          cmake ..
      - name: Build doc examples
        shell: bash -el {0}
        run: |
          cd build
          make doc -j$(nproc)
      - name: Get external tags
        shell: bash -el {0}
        run: |
          cd build/doc
          mkdir -p tags
          cd tags
          curl https://upload.cppreference.com/mwiki/images/f/f8/cppreference-doxygen-web.tag.xml -o cppreference-doxygen-web.tag.xml
      - name: Get Theme
        shell: bash -el {0}
        run: |
          cd build/doc
          wget https://github.com/HaoZeke/doxyYoda/releases/download/0.0.2/doxyYoda_0.0.2.tar.gz
          tar xf doxyYoda_0.0.2.tar.gz
      - name: Generate Docs
        shell: bash -el {0}
        run: |
          cp doc/Doxygen-eigen.cfg build/doc
          cp doc/Doxygen-eigen-unsupported.cfg build/doc
          cd build
          doxygen doc/Doxygen-eigen.cfg
      - name: Generate Unsupported Docs
        shell: bash -el {0}
        run: |
          cp doc/Doxygen-eigen-unsupported.cfg build/doc
          cd build
          mkdir -p doc/html/unsupported
          doxygen doc/Doxygen-eigen-unsupported.cfg
      - name: Copy additional files
        shell: bash -el {0}
        run: |
          cp doc/AsciiQuickReference.txt build/doc/html
          cp doc/Eigen_Silly_Professor_64x64.png build/doc/html
          cp doc/ftv2node.png build/doc/html
          cp doc/ftv2pnode.png build/doc/html
          cp doc/eigen_navtree_hacks.js build/doc/html
      - name: Clarify origins
        shell: bash -el {0}
        run: |
          cd build/doc/html
          awk '{gsub(/You can <a href="eigen-doc.tgz">download<\/a> it as a tgz archive for offline reading./, "")}1' index.html > tmp && mv -f tmp index.html
          find . -name "*.html" -type f -exec sh -c '
          awk '\''{gsub(/and the <a class="outlink" href="https:\/\/github.com\/HaoZeke\/doxyYoda">doxyYoda theme<\/a>/, "&. \nThis is an unofficial themed variant maintained by <a href=\"https://rgoswami.me\">Rohit Goswami</a>, based on the <a href=\"https://eigen.tuxfamily.org/dox/\">official documentation</a>.")}1'\'' "$1" > tmp && mv -f tmp "$1"
          ' sh {} \;
      - name: Archive artifact
        shell: bash -el {0}
        if: runner.os == 'Linux'
        run: |
          tar \
          --dereference --hard-dereference \
          --exclude=.git \
          --exclude=.github \
          -cvf "$RUNNER_TEMP/artifact.tar" \
          --directory=build/doc/html .
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          if-no-files-found: error
  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build_docs
    if: github.event_name == 'push'
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action
